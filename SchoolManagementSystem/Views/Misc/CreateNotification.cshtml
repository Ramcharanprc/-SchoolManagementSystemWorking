@model SchoolManagementSystem.Models.Notification

@{
    ViewBag.Title = "CreateNotification";
}
@if(ViewBag.Successful != null)
{
    <script>
        swal({
            type: "success",
            title: "Success",
            text: "@ViewBag.Successful",
            closeOnConfirm: false
        }, function(isConfirm){
                if (isConfirm) {
                    window.location.href = "@Url.Action("Administration", "Home")";
                }
        });
    </script>
    ViewBag.Successful = null;
}
@if(ViewBag.Error != null)
{
    <script>
        swal({
            type: "error",
            title: "Error",
            text: "@ViewBag.Error"
        });
    </script>
    ViewBag.Error = null;
}
@using (Html.BeginForm("CreateNotification", "Misc", FormMethod.Post, new {@class= "formSpecs" }))
{
<div class="form-horizontal formDiv">
    <h4>Notification</h4>
    <hr />
    <div class="form-group required">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", required="required"} })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required">
        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2"})
        <div class="col-md-8 userTypeMargin">
            @Html.TextAreaFor(model => model.Message, new { @class = "form-control", @rows = "5", required = "required" } )
            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
            @Html.ActionLink("Back", "Administration","Home", "", new { @class= "btn btn-default"})
        </div>
    </div>
</div>
}
